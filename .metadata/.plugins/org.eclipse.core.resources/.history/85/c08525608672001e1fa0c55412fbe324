package ui;

import java.awt.BorderLayout;
import java.awt.Color;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTabbedPane;
import javax.swing.border.BevelBorder;

import CustomUI.MauCacDongTrongBang;
import CustomUI.MyButton;
import CustomUI.MyCombobox;
import CustomUI.MyTable;

import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

public class GUIDoiTraHang extends JPanel {
	private JTextField txtTimKiemHoaDon;
	/**
	 * 
	 */
	private DefaultTableModel modelDanhSachHoaDon;
	private JTable tbDanhSachHoaDon;
	private JScrollPane srcDanhSachHoaDon;
	private DefaultTableModel modelDanhSachSanPham;
	private MyTable tbDanhSachSanPham;
	private JTextField txtSanPham;
	private JTextField txtLyDo;
	private JTextField txtSoLuong;
	public GUIDoiTraHang() {
		this.setBackground(new Color(255, 255, 255));
		this.setBounds(250, 0, 1250, 800);
		setLayout(null);
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		tabbedPane.setBounds(0, 0, 1230, 760);
		add(tabbedPane);
		
		JPanel pnlQuanLyDonDoiTra = new JPanel();
		pnlQuanLyDonDoiTra.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tabbedPane.addTab("Quản Lý Đơn Đổi Trả", null, pnlQuanLyDonDoiTra, null);
		tabbedPane.setForegroundAt(0, new Color(255, 255, 255));
		tabbedPane.setBackgroundAt(0, new Color(97, 166, 247));
		pnlQuanLyDonDoiTra.setLayout(null);
		
		JPanel pnlThongTinHoaDon = new JPanel();
		pnlThongTinHoaDon.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlThongTinHoaDon.setLayout(null);
		pnlThongTinHoaDon.setBackground(Color.WHITE);
		pnlThongTinHoaDon.setBounds(27, 28, 542, 160);
		pnlQuanLyDonDoiTra.add(pnlThongTinHoaDon);
		
		JLabel lblTenKhachHang = new JLabel("Tên khách hàng:");
		lblTenKhachHang.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		lblTenKhachHang.setBounds(110, 30, 137, 20);
		pnlThongTinHoaDon.add(lblTenKhachHang);
		
		JLabel lblTenKhachHangv = new JLabel("Huỳnh Quốc Bảo");
		lblTenKhachHangv.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		lblTenKhachHangv.setBounds(257, 30, 154, 20);
		pnlThongTinHoaDon.add(lblTenKhachHangv);
		
		JLabel lblMaHoaDon = new JLabel("Mã hóa đơn:");
		lblMaHoaDon.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		lblMaHoaDon.setBounds(110, 60, 137, 20);
		pnlThongTinHoaDon.add(lblMaHoaDon);
		
		JLabel lblMaHoaDonv = new JLabel("HD12");
		lblMaHoaDonv.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		lblMaHoaDonv.setBounds(257, 60, 154, 20);
		pnlThongTinHoaDon.add(lblMaHoaDonv);
		
		JLabel lblNgayLapHoaDon = new JLabel("Ngày lập:");
		lblNgayLapHoaDon.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		lblNgayLapHoaDon.setBounds(110, 90, 137, 20);
		pnlThongTinHoaDon.add(lblNgayLapHoaDon);
		
		JLabel lblNgayLapHoaDonv = new JLabel("12/12/2023");
		lblNgayLapHoaDonv.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		lblNgayLapHoaDonv.setBounds(257, 90, 154, 20);
		pnlThongTinHoaDon.add(lblNgayLapHoaDonv);
		
		MyButton btnXemChiTietHoaDon = new MyButton("Xem chi tiết");
		btnXemChiTietHoaDon.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnXemChiTietHoaDon.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		btnXemChiTietHoaDon.setBounds(191, 126, 120, 23);
		pnlThongTinHoaDon.add(btnXemChiTietHoaDon);
		
		JPanel pnlTimKiemHoaDon = new JPanel();
		pnlTimKiemHoaDon.setBackground(new Color(255, 255, 255));
		pnlTimKiemHoaDon.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlTimKiemHoaDon.setBounds(27, 212, 542, 80);
		pnlQuanLyDonDoiTra.add(pnlTimKiemHoaDon);
		pnlTimKiemHoaDon.setLayout(null);
		
		JLabel lblTimKiemHoaDon = new JLabel("Tìm kiếm hóa đơn");
		lblTimKiemHoaDon.setFont(new Font("Times New Roman", Font.BOLD, 16));
		lblTimKiemHoaDon.setBackground(new Color(255, 255, 255));
		lblTimKiemHoaDon.setBounds(52, 11, 150, 20);
		pnlTimKiemHoaDon.add(lblTimKiemHoaDon);
		
		txtTimKiemHoaDon = new JTextField();
		txtTimKiemHoaDon.setText("Nhập số điện thoại khách hàng");
		txtTimKiemHoaDon.setFont(new Font("Times New Roman", Font.ITALIC, 14));
		txtTimKiemHoaDon.setToolTipText("");
		txtTimKiemHoaDon.setBounds(52, 36, 320, 24);
		pnlTimKiemHoaDon.add(txtTimKiemHoaDon);
		txtTimKiemHoaDon.setColumns(10);
		txtTimKiemHoaDon.setForeground(Color.GRAY);
		txtTimKiemHoaDon.setBorder(new BevelBorder(BevelBorder.LOWERED, new Color(102, 102, 102), null, null, null));
		JButton btnTimKiemKhachHang = new MyButton("Tìm kiếm");
		btnTimKiemKhachHang.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		btnTimKiemKhachHang.setBounds(387, 36, 117, 24);
		pnlTimKiemHoaDon.add(btnTimKiemKhachHang);
		txtTimKiemHoaDon.addFocusListener(new java.awt.event.FocusAdapter() {
            // Xóa placeholder khi trường JTextField được tương tác
            public void focusGained(java.awt.event.FocusEvent evt) {
            	if (txtTimKiemHoaDon.getText().equals("Nhập số điện thoại khách hàng")) {
                	txtTimKiemHoaDon.setText("");
                	txtTimKiemHoaDon.setForeground(Color.BLACK);
                }
            }
            // Thêm placeholder nếu trường JTextField không có dữ liệu
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (txtTimKiemHoaDon.getText().isEmpty()) {
                	txtTimKiemHoaDon.setForeground(Color.GRAY);
                	txtTimKiemHoaDon.setText("Nhập số điện thoại khách hàng");
                }
            }
        });

		
		JPanel pnlDanhSachHoaDon = new JPanel();
		pnlDanhSachHoaDon.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlDanhSachHoaDon.setBackground(new Color(255, 255, 255));
		pnlDanhSachHoaDon.setBounds(27, 316, 542, 392);
		pnlQuanLyDonDoiTra.add(pnlDanhSachHoaDon);
		pnlDanhSachHoaDon.setLayout(null);
		
		JLabel lblDanhSachHoaDon = new JLabel("Danh sách hóa đơn trong 7 ngày gần nhất");
		lblDanhSachHoaDon.setFont(new Font("Times New Roman", Font.BOLD, 14));
		lblDanhSachHoaDon.setBounds(55, 11, 334, 18);
		pnlDanhSachHoaDon.add(lblDanhSachHoaDon);
		
		
		modelDanhSachHoaDon = new DefaultTableModel(
				new Object[] {"Mã hóa đơn","Ngày lập","Nhân viên","Số lượng SP","Tổng tiền" }, 0);
		
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		modelDanhSachHoaDon.addRow(new Object[] {"HD12","12/12/2023","Huỳnh Quốc Bảo","12","800.000"});
		
		tbDanhSachHoaDon = new MyTable(modelDanhSachHoaDon);		
		tbDanhSachHoaDon.getColumnModel().getColumn(2).setPreferredWidth(120);
		srcDanhSachHoaDon = new JScrollPane(tbDanhSachHoaDon,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		srcDanhSachHoaDon.setBounds(20, 40, 500, 256);
		
		pnlDanhSachHoaDon.add(srcDanhSachHoaDon);
		
		JLabel lblSanPham = new JLabel("Sản phẩm cần đổi:");
		lblSanPham.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		lblSanPham.setBounds(20, 320, 130, 18);
		pnlDanhSachHoaDon.add(lblSanPham);
		
		txtSanPham = new JTextField();
		txtSanPham.setFont(new Font("Times New Roman", Font.PLAIN, 15));

		txtSanPham.setBounds(147, 319, 160, 20);
		txtSanPham.setEnabled(false);
		pnlDanhSachHoaDon.add(txtSanPham);
		txtSanPham.setColumns(10);
		
		JLabel lblLyDo = new JLabel("Lý do:");
		lblLyDo.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		lblLyDo.setBounds(20, 354, 51, 20);
		pnlDanhSachHoaDon.add(lblLyDo);
		
		txtLyDo = new JTextField();
		txtLyDo.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		txtLyDo.setColumns(10);
		txtLyDo.setBorder(new BevelBorder(BevelBorder.LOWERED, new Color(102, 102, 102), null, null, null));
		txtLyDo.setBounds(81, 354, 418, 20);
		pnlDanhSachHoaDon.add(txtLyDo);
		
		JLabel lblSoLuong = new JLabel("Số lượng:");
		lblSoLuong.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		lblSoLuong.setBounds(330, 319, 80, 20);
		pnlDanhSachHoaDon.add(lblSoLuong);
		
		txtSoLuong = new JTextField();
		txtSoLuong.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		txtSoLuong.setBounds(403, 320, 96, 20);
		txtSoLuong.setBorder(new BevelBorder(BevelBorder.LOWERED, new Color(102, 102, 102), null, null, null));
		pnlDanhSachHoaDon.add(txtSoLuong);
		txtSoLuong.setColumns(10);
		
		JPanel pnlSanPhamTrongHoaDon = new JPanel();
		pnlSanPhamTrongHoaDon.setBackground(new Color(255, 255, 255));
		pnlSanPhamTrongHoaDon.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlSanPhamTrongHoaDon.setBounds(592, 28, 611, 332);
		pnlQuanLyDonDoiTra.add(pnlSanPhamTrongHoaDon);
		pnlSanPhamTrongHoaDon.setLayout(null);
		
		JLabel lblDanhSachSanPham = new JLabel("Danh sách sản phẩm trong hóa đơn");
		lblDanhSachSanPham.setFont(new Font("Times New Roman", Font.BOLD, 14));
		lblDanhSachSanPham.setBounds(24, 11, 250, 17);
		pnlSanPhamTrongHoaDon.add(lblDanhSachSanPham);
		
		modelDanhSachSanPham = new DefaultTableModel(
				new Object[] {"Mã sản phẩm","Tên sản phẩm","Số lượng","Giá bán"}, 0);
		
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});
		modelDanhSachSanPham.addRow(new Object[] {"SP112","Sách Công Dân","2","100.000"});

		
		tbDanhSachSanPham = new MyTable(modelDanhSachSanPham);	
		
		JScrollPane srcDanhSachSanPham = new JScrollPane(tbDanhSachSanPham,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		srcDanhSachSanPham.setBounds(18, 35, 578, 240);
		pnlSanPhamTrongHoaDon.add(srcDanhSachSanPham);
		
		JComboBox cbPhuongThucDoiTra = new MyCombobox();
		cbPhuongThucDoiTra.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		cbPhuongThucDoiTra.setModel(new DefaultComboBoxModel(new String[] {"Đổi Hàng", "Trả Tiền"}));
		cbPhuongThucDoiTra.setSelectedIndex(1);
		cbPhuongThucDoiTra.setBounds(100, 293, 230, 22);
		pnlSanPhamTrongHoaDon.add(cbPhuongThucDoiTra);
		
		JButton btnTaoDonDoiTtra = new MyButton("Tạo đơn");
		btnTaoDonDoiTtra.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		btnTaoDonDoiTtra.setBounds(364, 294, 120, 23);
		pnlSanPhamTrongHoaDon.add(btnTaoDonDoiTtra);
		
		JPanel pnlThongTinDonDoiTra = new JPanel();
		pnlThongTinDonDoiTra.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlThongTinDonDoiTra.setBackground(new Color(255, 255, 255));
		pnlThongTinDonDoiTra.setBounds(592, 384, 611, 324);
		pnlQuanLyDonDoiTra.add(pnlThongTinDonDoiTra);
		pnlThongTinDonDoiTra.setLayout(null);
		
		JPanel pnlDonDoiTra = new JPanel();
		pnlDonDoiTra.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tabbedPane.addTab("Đơn Đổi Trả", null, pnlDonDoiTra, null);
		tabbedPane.setForegroundAt(1, new Color(255, 255, 255));
		tabbedPane.setBackgroundAt(1, new Color(97, 166, 247));
		pnlDonDoiTra.setLayout(null);

	}
}
